# --------------------------------------------FINAL ANALYSIS------------------------------------------

# ------------------------------------------ DATA MANIPULATION----------------------------------------

### Total unique active Listings
```sql
SELECT DISTINCT id 
FROM `lithe-creek-364913.airbnb_data.listings_denver`
````

### Total Count of Neighborhoods with active listings
```sql
SELECT DISTINCT neighbourhood_cleansed 
FROM `lithe-creek-364913.airbnb_data.listings_denver`
````

### Total count of reviews
```sql
SELECT id, COUNT(comments) as reviews_count
FROM `lithe-creek-364913.airbnb_data.reviews_denver`
````
 ###  Min listing prices by neighborhood 
```sql
SELECT Max(price) as max_price, Min(price) as min_price, neighbourhood_cleansed
FROM `lithe-creek-364913.airbnb_data.listings_denver`
GROUP BY neighbourhood_cleansed 
ORDER BY min_price ASC;
````

 ###  Max listing prices by neighborhood 
```sql
SELECT Max(price) as max_price, Min(price) as min_price, neighbourhood_cleansed
FROM `lithe-creek-364913.airbnb_data.listings_denver`
GROUP BY neighbourhood_cleansed 
ORDER BY max_price DESC;
````

# --------------------------------------------DATA CLEANING------------------------------------------

 ###  Removing NULL values from columns in `listings` dataset
```sql
Select * FROM `lithe-creek-364913.airbnb_data.listings_denver`
WHERE id IS NOT NULL
AND listing_url IS NOT NULL
AND  host_name IS NOT NULL
AND neighbourhood_cleansed IS NOT NULL
AND room_type IS NOT NULL
AND bedrooms IS NOT NULL
````

# ---------------------------------------EXPLORATORY DATA ANALYSIS----------------------------------

## Properties

### Count of property types 
```sql
SELECT room_type, COUNT(room_type)
FROM `lithe-creek-364913.airbnb_data.cleaned_listings`
GROUP BY room_type
````
### Distribution of bedrooms 
```sql
SELECT  DISTINCT bedrooms, COUNT(room_type) num_listings
FROM `lithe-creek-364913.airbnb_data.cleaned_listings`
WHERE room_type = 'Entire home/apt'
GROUP BY bedrooms
````

### Avg price per night by neighbourhoods 
```sql
SELECT  neighbourhood_cleansed, AVG(price) as avg_price
FROM `lithe-creek-364913.airbnb_data.cleaned_listings`
GROUP BY neighbourhood_cleansed
ORDER BY avg_price DESC;
````

### Count of listings with 1-3 bedrooms by Neighbourhood
```sql
SELECT neighbourhood_cleansed,COUNT(bedrooms) AS count_bedrooms
FROM `lithe-creek-364913.airbnb_data.cleaned_listings`
WHERE room_type = 'Entire home/apt'AND bedrooms BETWEEN 1 AND 3
GROUP BY neighbourhood_cleansed
````
### List of ammenities for common theme analysis
```sql
SELECT amenities
FROM `lithe-creek-364913.airbnb_data.joined_listings_and_reviews`
````

### List of comments for common theme analysis
```sql
SELECT comments
FROM `lithe-creek-364913.airbnb_data.joined_listings_and_reviews`
````

## Query used to join the cleaned listings and the review table
```sql
SELECT * 
FROM `lithe-creek-364913.airbnb_data.reviews_denver`
INNER JOIN `lithe-creek-364913.airbnb_data.listings_denver` ON CAST(`lithe-creek-364913.airbnb_data.listings_denver`.id AS STRING) = CAST(`lithe-creek-364913.airbnb_data.reviews_denver`.listing_id AS STRING)
````

## Query used to create a potential customer list
```sql
SELECT host_id, host_url, host_name, COUNT(*) AS num_dirty_reviews
FROM `lithe-creek-364913.airbnb_data.joined_listings_and_reviews`
WHERE comments LIKE "%dirty%"
GROUP BY host_id, host_url, host_name
ORDER BY num_dirty_reviews DESC;
````

## Query used to create a potential customer list by neighbourhood
```sql
SELECT neighbourhood_cleansed, COUNT(*) AS num_dirty_reviews
FROM `lithe-creek-364913.airbnb_data.joined_listings_and_reviews`
WHERE comments LIKE "%dirty%"
GROUP BY neighbourhood_cleansed
ORDER BY num_dirty_reviews DESC;
````

